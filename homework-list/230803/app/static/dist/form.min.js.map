{"version":3,"sources":["form.js"],"names":["document","querySelectorAll","forEach","input","addEventListener","classList","add","validityMessage","badInput","patternMismatch","rangeOverflow","rangeUnderflow","stepMismatch","tooLong","tooShort","typeMismatch","getMessage","validity","key","showError","setCustomValidity"],"mappings":"aAAAA,SAASC,iBAAiB,SAASC,QAAQ,SAACC,GACxCA,EAAMC,iBAAiB,UAAW,WAA5BA,SAAAA,MAAAA,GAAiBC,UAAWC,IAAA,qBAIrC,IALDC,gBAAA,CAOMA,SAAAA,aACFC,gBAAU,eACVC,cAAiB,cACjBC,eAAe,cACfC,aAAgB,eAChBC,QAAAA,mBACAC,SAAS,mBACTC,aAAU,eACVC,aAAc,mBAKlB,SAASC,WAAWC,GAChB,IAAK,IAALC,KAAkBX,gBACVU,GAAAA,EAAJC,GACI,OAAOX,gBAAPW,GAKZ,SAASC,UAAUhB,GACfA,EAAMiB,kBAAkBJ,WAAWb,EAAMc,WAAzC,IAGJd,MAAMC,iBAAiB,UAAW,WAC9Be,UAAUhB","file":"form.min.js","sourcesContent":["document.querySelectorAll(\"input\").forEach((input) => {\n    input.addEventListener(\"invalid\", () => {\n        // 검증 후 폼 요소에 was-validated 클래스로 표시해 둔다\n        document.forms[0].classList.add(\"was-validated\");\n    });\n});\n\nconst validityMessage = {\n    badInput: \"잘못된 입력입니다.\",\n    patternMismatch: \"패턴에 맞게 입력하세요\",\n    rangeOverflow: \"범위를 초과하였습니다\",\n    rangeUnderflow: \"범위에 미달하였습니다\",\n    stepMismatch: \"간격에 맞게 입력하세요\",\n    tooLong: \"최대 글자 미만으로 입력하세요\",\n    tooShort: \"최소 글자 미만으로 입력하세요\",\n    typeMismatch: \"형식에 맞게 입력하세요\",\n    valueMissing: \"이 필드를 반드시 입력하세요\",\n};\n\n// validity 객체를 받아 메세지 맵에서 오류 메세지를 찾는다\nfunction getMessage(validity) {\n    for (const key in validityMessage) {\n        if (validity[key]) {\n            return validityMessage[key];\n        }\n    }\n}\n\nfunction showError(input) {\n    input.setCustomValidity(getMessage(input.validity) || \"\");\n}\n\ninput.addEventListener(\"invalid\", () => {\n    showError(input);\n});\n"]}