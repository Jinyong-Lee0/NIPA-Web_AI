{"version":3,"sources":["form.js"],"names":["document","querySelectorAll","forEach","input","addEventListener","forms","classList","add","validityMessage","badInput","patternMismatch","rangeOverflow","rangeUnderflow","stepMismatch","tooLong","tooShort","typeMismatch","valueMissing","getMessage","validity","key","showError","setCustomValidity"],"mappings":";;AAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmCC,OAAnC,CAA2C,UAACC,KAAD,EAAW;AAClDA,EAAAA,KAAK,CAACC,gBAAN,CAAuB,SAAvB,EAAkC,YAAM;AACpC;AACAJ,IAAAA,QAAQ,CAACK,KAAT,CAAe,CAAf,EAAkBC,SAAlB,CAA4BC,GAA5B,CAAgC,eAAhC;AACH,GAHD;AAIH,CALD;AAOA,IAAMC,eAAe,GAAG;AACpBC,EAAAA,QAAQ,EAAE,YADU;AAEpBC,EAAAA,eAAe,EAAE,cAFG;AAGpBC,EAAAA,aAAa,EAAE,aAHK;AAIpBC,EAAAA,cAAc,EAAE,aAJI;AAKpBC,EAAAA,YAAY,EAAE,cALM;AAMpBC,EAAAA,OAAO,EAAE,kBANW;AAOpBC,EAAAA,QAAQ,EAAE,kBAPU;AAQpBC,EAAAA,YAAY,EAAE,cARM;AASpBC,EAAAA,YAAY,EAAE;AATM,CAAxB,C,CAYA;;AACA,SAASC,UAAT,CAAoBC,QAApB,EAA8B;AAC1B,OAAK,IAAMC,GAAX,IAAkBZ,eAAlB,EAAmC;AAC/B,QAAIW,QAAQ,CAACC,GAAD,CAAZ,EAAmB;AACf,aAAOZ,eAAe,CAACY,GAAD,CAAtB;AACH;AACJ;AACJ;;AAED,SAASC,SAAT,CAAmBlB,KAAnB,EAA0B;AACtBA,EAAAA,KAAK,CAACmB,iBAAN,CAAwBJ,UAAU,CAACf,KAAK,CAACgB,QAAP,CAAV,IAA8B,EAAtD;AACH;;AAEDhB,KAAK,CAACC,gBAAN,CAAuB,SAAvB,EAAkC,YAAM;AACpCiB,EAAAA,SAAS,CAAClB,KAAD,CAAT;AACH,CAFD","sourcesContent":["document.querySelectorAll(\"input\").forEach((input) => {\n    input.addEventListener(\"invalid\", () => {\n        // 검증 후 폼 요소에 was-validated 클래스로 표시해 둔다\n        document.forms[0].classList.add(\"was-validated\");\n    });\n});\n\nconst validityMessage = {\n    badInput: \"잘못된 입력입니다.\",\n    patternMismatch: \"패턴에 맞게 입력하세요\",\n    rangeOverflow: \"범위를 초과하였습니다\",\n    rangeUnderflow: \"범위에 미달하였습니다\",\n    stepMismatch: \"간격에 맞게 입력하세요\",\n    tooLong: \"최대 글자 미만으로 입력하세요\",\n    tooShort: \"최소 글자 미만으로 입력하세요\",\n    typeMismatch: \"형식에 맞게 입력하세요\",\n    valueMissing: \"이 필드를 반드시 입력하세요\",\n};\n\n// validity 객체를 받아 메세지 맵에서 오류 메세지를 찾는다\nfunction getMessage(validity) {\n    for (const key in validityMessage) {\n        if (validity[key]) {\n            return validityMessage[key];\n        }\n    }\n}\n\nfunction showError(input) {\n    input.setCustomValidity(getMessage(input.validity) || \"\");\n}\n\ninput.addEventListener(\"invalid\", () => {\n    showError(input);\n});\n"],"file":"form.dev.js"}